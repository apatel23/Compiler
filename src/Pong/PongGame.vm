function PongGame.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
//do Screen.clearScreen()
call Screen.clearScreen 0
pop temp 0
push constant 50
pop this 6
//let batWidth = 50
push constant 230
push constant 229
push this 6
push constant 7
call Bat.new 4
pop this 0
//let bat = Bat.new(230, 229, batWidth, 7)
push constant 253
push constant 222
push constant 0
push constant 511
push constant 0
push constant 229
call Ball.new 6
pop this 1
//let ball = Ball.new(253, 222, 0, 511, 0, 229)
push this 1
push constant 400
push constant 0
//do ball.setDestination(400, 0)
call Ball.setDestination 3
pop temp 0
push constant 0
push constant 238
push constant 511
push constant 240
//do Screen.drawRectangle(0, 238, 511, 240)
call Screen.drawRectangle 4
pop temp 0
push constant 22
push constant 0
//do Output.moveCursor(22, 0)
call Output.moveCursor 2
pop temp 0
push constant 8
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
//do Output.printString("Score: 0")
call Output.printString 1
pop temp 0
push constant 0
pop this 3
//let exit = false
push constant 0
pop this 4
//let score = 0
push constant 0
pop this 2
//let wall = 0
push constant 0
pop this 5
//let lastWall = 0
push pointer 0
//return this
return
function PongGame.dispose 0
push argument 0
pop pointer 0
push this 0
//do bat.dispose()
call Bat.dispose 1
pop temp 0
push this 1
//do ball.dispose()
call Ball.dispose 1
pop temp 0
push pointer 0
//do Memory.deAlloc(this)
call Memory.deAlloc 1
pop temp 0
//return 
push constant 0
return
function PongGame.newInstance 0
call PongGame.new 0
pop static 0
//let instance = PongGame.new()
//return 
push constant 0
return
function PongGame.getInstance 0
push static 0
//return instance
return
function PongGame.run 1
push argument 0
pop pointer 0
label WHILE_EXP0
push this 3
not
//while(~exit)
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
push this 3
not
and
//while((key=0)&(~exit))
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
//let key = Keyboard.keyPressed()
push this 0
//do bat.move()
call Bat.move 1
pop temp 0
push pointer 0
//do moveBall()
call PongGame.moveBall 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
//END_WHILE1
push local 0
push constant 130
eq
//if(key=130)
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 1
//do bat.setDirection(1)
call Bat.setDirection 2
pop temp 0
//END_IF0
goto IF_END0
label IF_FALSE0
//else
push local 0
push constant 132
eq
//if(key=132)
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push constant 2
//do bat.setDirection(2)
call Bat.setDirection 2
pop temp 0
//END_IF1
goto IF_END1
label IF_FALSE1
//else
push local 0
push constant 140
eq
//if(key=140)
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop this 3
//let exit = true
//END_IF2
goto IF_END2
label IF_FALSE2
label IF_END2
//END_ELSE1
label IF_END1
//END_ELSE0
label IF_END0
label WHILE_EXP2
push local 0
push constant 0
eq
not
push this 3
not
and
//while((~(key=0))&(~exit))
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
//let key = Keyboard.keyPressed()
push this 0
//do bat.move()
call Bat.move 1
pop temp 0
push pointer 0
//do moveBall()
call PongGame.moveBall 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
//END_WHILE2
goto WHILE_EXP0
label WHILE_END0
//END_WHILE0
push this 3
//if(exit)
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 10
push constant 27
//do Output.moveCursor(10, 27)
call Output.moveCursor 2
pop temp 0
push constant 9
call String.new 1
push constant 71
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
//do Output.printString("Game Over")
call Output.printString 1
pop temp 0
//END_IF3
goto IF_END3
label IF_FALSE3
label IF_END3
//return 
push constant 0
return
function PongGame.moveBall 5
push argument 0
pop pointer 0
push this 1
call Ball.move 1
pop this 2
//let wall = ball.move()
push this 2
push constant 0
gt
push this 2
push this 5
eq
not
and
//if((wall>0)&(~(wall=lastWall)))
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
pop this 5
//let lastWall = wall
push constant 0
pop local 0
//let bouncingDirection = 0
push this 0
call Bat.getLeft 1
pop local 1
//let batLeft = bat.getLeft()
push this 0
call Bat.getRight 1
pop local 2
//let batRight = bat.getRight()
push this 1
call Ball.getLeft 1
pop local 3
//let ballLeft = ball.getLeft()
push this 1
call Ball.getRight 1
pop local 4
//let ballRight = ball.getRight()
push this 2
push constant 4
eq
//if(wall=4)
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push local 4
gt
push local 2
push local 3
lt
or
pop this 3
//let exit = (batLeft>ballRight)|(batRight<ballLeft)
push this 3
not
//if(~exit)
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 4
push local 1
push constant 10
add
lt
//if(ballRight<(batLeft+10))
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 1
neg
pop local 0
//let bouncingDirection = -1
//END_IF7
goto IF_END7
label IF_FALSE7
//else
push local 3
push local 2
push constant 10
sub
gt
//if(ballLeft>(batRight-10))
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 1
pop local 0
//let bouncingDirection = 1
//END_IF8
goto IF_END8
label IF_FALSE8
label IF_END8
//END_ELSE7
label IF_END7
push this 6
push constant 2
sub
pop this 6
//let batWidth = batWidth-2
push this 0
push this 6
//do bat.setWidth(batWidth)
call Bat.setWidth 2
pop temp 0
push this 4
push constant 1
add
pop this 4
//let score = score+1
push constant 22
push constant 7
//do Output.moveCursor(22, 7)
call Output.moveCursor 2
pop temp 0
push this 4
//do Output.printInt(score)
call Output.printInt 1
pop temp 0
//END_IF6
goto IF_END6
label IF_FALSE6
label IF_END6
//END_IF5
goto IF_END5
label IF_FALSE5
label IF_END5
push this 1
push local 0
//do ball.bounce(bouncingDirection)
call Ball.bounce 2
pop temp 0
//END_IF4
goto IF_END4
label IF_FALSE4
label IF_END4
//return 
push constant 0
return
